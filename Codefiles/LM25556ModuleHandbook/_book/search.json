[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Welcome",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#this-is-the-module-handbook-for-the-uob-module-lm25556-environmental-analysis-and-modelling-in-r.",
    "href": "index.html#this-is-the-module-handbook-for-the-uob-module-lm25556-environmental-analysis-and-modelling-in-r.",
    "title": "Welcome",
    "section": "This is the module handbook for the UoB module: LM25556: Environmental analysis and modelling in R.",
    "text": "This is the module handbook for the UoB module: LM25556: Environmental analysis and modelling in R.\n\nFigure Credits::\n\nTop left. Penguin violin plot. From: R Graph Gallery using the PalmerPenguins package data. Plot created by Tuo Wang and code is here: https://r-graph-gallery.com/web-violinplot-with-ggstatsplot.html\nTop right. An original figure of the famous ‘bullhead/loach chironomid predation’ dataset. See Doncaster and Davey (2007) Analysis of Variance and Covariance: How to Choose and Construct Models for the Life Sciences. CUP, Cambridge.\nBottom left. The Birch trees on the Worcester-Birmingham Canal. Photograph: Jon Sadler.\nBottom right. A flock of turnstones (Bardsey Isle, North Wales). Photograph: Jon Sadler.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "preface.html",
    "href": "preface.html",
    "title": "1  Preface",
    "section": "",
    "text": "1.1 The class materials\nThe class materials are written as a Quarto book which is renders to a sequence of link html files (and a PDF document). You need to click on the ‘index.html’ file to use it as a book - this will open up the list of chapters.\nThe module is structured into 10 weeks of content, with each week introducing you to different aspects of using R to analyse environmental datasets. Chapter 10 or week 10 will introduce you to the datasets for Part A of the module assessment, which is worth 50% of the module mark.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "preface.html#how-to-use-this-document",
    "href": "preface.html#how-to-use-this-document",
    "title": "1  Preface",
    "section": "1.2 How to use this document",
    "text": "1.2 How to use this document\nThe instructions are self-evident. The instructions and code are interlinked, please:\n\nWork through the workshop materials and click on each code link which will copy the code from the chunk to your computer clipboard.\nPaste the code into the relevant weekly codefile;\nRemember to use the # symbol to add comments to your code. Please use comments extensively.\nEach chapter has its own References section. Please undertake the guided readings as indicated, especially if it is reading for the next workshop. This will support your learning immeasurably!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "chap1.html",
    "href": "chap1.html",
    "title": "2  An introduction to R and RStudio",
    "section": "",
    "text": "2.1 About R and RStudio\nThe aim of this first class is to get introduce you to R and how it works within RStudio.\nIn it we will:\n本模块接下来的几个研讨会将以这些数据为案例研究。数据以及研讨会（html 文档）以 zip 文件的形式存储在 CANVAS 网站上：\nhttps://canvas.bham.ac.uk/courses/74919/pages/code-and-data-files-download-links-and-instructions\n请将它们下载到您的硬盘、共享网络驱动器、OneDrive 或其他合适的位置。双击 zip 文件并解压数据。\n本课程旨在向您介绍 R 语言及其在 RStudio 中的工作原理。\n我们将：\nIn this course, we will use R, the industry-standard programming language for environmental and geographic data analysis. While tools like Excel or SPSS rely on clicking through menus, R operates on typed commands. This command-based approach is fundamentally more powerful because it forces you to create a script. This script acts as a permanent, shareable record of your entire workflow, ensuring your analysis is transparent. More importantly, it allows you to repeat complex tasks perfectly, guaranteeing that you—and others—can reproduce the same results every time!\n在本课程中，我们将使用 R，它是用于环境和地理数据分析的行业标准编程语言。Excel 或 SPSS 等工具依赖于点击菜单，而 R 则依靠键入的命令进行操作。这种基于命令的方法本质上更加强大，因为它强制您创建脚本。该脚本可作为整个工作流程的永久可共享记录，确保您的分析透明化。更重要的是，它允许您完美地重复复杂的任务，确保您和其他人每次都能重现相同的结果！\nIt was designed in 1990s for statistics and the generation of publication quality graphics, which can be easily modified and tweaked by making slight changes to the script. Command-line computing like this can be off-putting at first as it is easy to make mistakes that aren’t always obvious to detect. But it is worth sticking with because:\n它设计于 20 世纪 90 年代，用于统计和生成出版级质量的图表，只需对脚本进行细微修改即可轻松进行修改和调整。像这样的命令行计算一开始可能会让人感到不适应，因为很容易犯一些不易察觉的错误。但它值得坚持使用，因为：\nR can be downloaded from https://www.r-project.org/. While it is possible to conduct analysis on R directly, we will run it via Rstudio which provides a user-friendly graphical user interface. After downloading R, Rstudio can be obtained for free from https://www.rstudio.com/.\nThe software is available on our university computer clusters and accessible via the AppsAnywhere application. There is a shortcut to this on the desktop of all PCs. Click on RStudio and the R will already be there.\nYou can run this on your personal laptop and bring it to class. If it is not on your computer already please review the pre-session module on the CANVAS website for guidance on installation and so on.\nR 语言可以从 https://www.r-project.org/ 下载。虽然可以直接在 R 上进行分析，但我们将通过 Rstudio 运行它，因为它提供了用户友好的图形用户界面。下载 R 语言后，您可以从 https://www.rstudio.com/ 免费获取 Rstudio。\n该软件已在我们大学的计算机集群上安装，可通过 AppsAnywhere 应用程序访问。所有电脑的桌面上都有该软件的快捷方式。点击 RStudio，R 语言就会自动出现。\n您可以在个人笔记本电脑上运行该软件并将其带到课堂上。如果您的电脑上还没有 R 语言，请查看 CANVAS 网站上的课前模块，获取安装指南等。\nTo open R click on the start menu and open RStudio. You should see a screen resembling the image below (Fig. 1). The screen is separated into 4 windows: - The scripting window (top left). This is where you open and edit your scripts (or code files). - The console window (bottom left). This is where R lists the commands you have entered and the results of those commands (or at least some of them). - The environment windows - or if you like R’s brain. This window shows the objects held in memory by the system (e.g. datafiles, vectors and so on), as well a history of things you’ve done, the connections you have open and lastly some tutorial resources. - The output/input window. This shows many things but the most important are the packages you have in the system, the files you are viewing (i.e. where you working directory is), the plots/graphics you might create and help options.\n要打开 R，请点击开始菜单，然后打开 RStudio。您将看到类似下图（图 2）的屏幕。该屏幕分为 4 个窗口： - 脚本窗口（左上角）。您可以在此处打开和编辑脚本（或代码文件）。 - 控制台窗口（左下角）。R 在此处列出您输入的命令以及这些命令（或至少部分命令）的执行结果。 - 环境窗口 - 如果您喜欢 R 的“大脑”，也可以称之为环境窗口。此窗口显示系统内存中保存的对象（例如数据文件、向量等），以及您执行操作的历史记录、您打开的连接以及一些教程资源。 - 输出/输入窗口。此窗口显示许多内容，但最重要的是系统中的软件包、您正在查看的文件（即您的工作目录）、您可能创建的图表/图形以及帮助选项。\nFigure 2.1: RStudio screen windows\nWe are going to start by setting the working directory. This is so R knows where to open and save files to. It is recommended that you set the working directory to an appropriate space in your computers work space. To start with, make it the directory where you have stored the unzipped data.\n首先，我们需要设置工作目录。这是为了让 R 知道在哪里打开和保存文件。建议将工作目录设置为计算机工作区中合适的位置。首先，将其设置为存储解压数据的目录。\nTo set the working directory, go to the Session option from the top bar of RStudio, click on Set Working Directory then Choose Directory and use the search window to click through to your directory and select Open.\n要设置工作目录，请转到 RStudio 顶部栏中的 会话 选项，单击 设置工作目录，然后单击 选择目录，并使用搜索窗口单击到您的目录并选择 打开。\nAlternatively, you can type in the address of the working directory manually using the setwd() function as demonstrated below. This requires you to type in the full address of where your data are stored. Pay attention to the double quotes around the path address. The code for this is:\nWhere, setwd() is the function call, and “~/Documents/GitHub/Teaching/LM_25556Environmental_Analysis/Codefiles” is the path.\n或者，您可以使用 setwd() 函数手动输入工作目录的地址，如下所示。这需要您输入数据存储的完整地址。请注意路径地址周围的双引号。代码如下：\n其中，setwd() 是函数调用， “~/Documents/GitHub/Teaching/LM_25556Environmental_Analysis/Codefiles” 是路径。\nYou will need to add in your path. 您需要在路径中添加.\nIf you want to know where your working directory currently is then use the getwd() function. R will return the disk address where it is looking. Or click on the Files tab on the bottom right window.\n如果你想知道当前工作目录的位置，可以使用 getwd() 函数。R 会返回当前正在查找的磁盘地址。或者，点击右下角窗口的 Files 选项卡。\n#get working directory (WD)\ngetwd()\n\n[1] \"/Users/jonsadler/Documents/GitHub/Teaching/LM_25556Environmental_Analysis/Codefiles/LM25556ModuleHandbook\"\nIf you want to see what files are in your working directly to copy a filename then either click on the Files tab on the bottom right window or use the list.files() function. Remember this list is from my computer. Your file list will be different.\n如果您想直接复制文件名并查看工作区中有哪些文件，请点击右下方窗口的“文件”选项卡，或使用“list.files()”函数。请记住，此列表来自我的电脑。您的文件列表可能会有所不同。\n#List the files in the WD\nlist.files()\n\n [1] \"_book\"                       \"_quarto.yml\"                \n [3] \"Book_cover.R\"                \"canal.jpg\"                  \n [5] \"chap1.qmd\"                   \"chap1.rmarkdown\"            \n [7] \"chap10.qmd\"                  \"chap2.qmd\"                  \n [9] \"chap3.qmd\"                   \"chap4.qmd\"                  \n[11] \"chap5.qmd\"                   \"chap6.qmd\"                  \n[13] \"chap7.qmd\"                   \"chap8.qmd\"                  \n[15] \"chap9.qmd\"                   \"cover.png\"                  \n[17] \"fish.png\"                    \"images\"                     \n[19] \"index.html\"                  \"index.qmd\"                  \n[21] \"LM25556ModuleHandbook.Rproj\" \"my-cover.png\"               \n[23] \"Penguins.png\"                \"plover.jpg\"                 \n[25] \"preface\"                     \"preface.html\"               \n[27] \"preface.qmd\"                 \"references.qmd\"             \n[29] \"site_libs\"                   \"turnstones.jpg\"",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>An introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "chap1.html#about-r-and-rstudio",
    "href": "chap1.html#about-r-and-rstudio",
    "title": "2  An introduction to R and RStudio",
    "section": "",
    "text": "It is an industry standard with a large user base.\nIt’s free and cross-platform so runs on Windows, Mac-OS and Unix.\nIt is highly customisable with a large number of libraries (‘or packages’) supporting multilevel and longitudinal regression, and mapping, spatial statistics, spatial regression and geostatistics to name a few methods.\n\n\n\n它是拥有庞大用户群的行业标准。\n它是免费且跨平台的，可在 Windows、Mac OS 和 Unix 上运行。\n它高度可定制，拥有大量支持多级和纵向回归、制图、空间统计、空间回归和地理统计等方法的库（或软件包）。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.1.1 Loading some packages into the system\nThe base installation of R has a lot of packages loaded as default. They sit in the toolbox available for instant use. But some functions are only available in different packages that are not in the base R installation. View each package as a set of tools that do things that aren’t in the base toolbox. This module will use the tidyverse package for many basic tasks; it includes tools for data manipulation/wrangling, creating graphics, dealing with dates and lots of other things. It was created by Hadley Wickham and you can read about it here:\nhttps://cran.r-project.org/web/packages/tidyverse/vignettes/paper.html\nand here:\nhttps://doi.org/10.18637/jss.v059.i10\nHere is the documentation/manual related to the package:\nhttps://cran.r-project.org/web/packages/tidyverse/tidyverse.pdf\nR 的基础安装默认加载了许多软件包。它们位于工具箱中，可立即使用。但有些函数仅在基础 R 安装中未包含的其他软件包中可用。您可以将每个软件包视为一组工具，用于执行基础工具箱中未包含的操作。本模块将使用 tidyverse 软件包执行许多基本任务；它包含用于数据操作/整理、创建图形、处理日期以及许多其他功能的工具。该软件包由 Hadley Wickham 创建，您可以在此处阅读相关信息：\nhttps://cran.r-project.org/web/packages/tidyverse/vignettes/paper.html\n以及此处：\nhttps://doi.org/10.18637/jss.v059.i10\n以下是与该软件包相关的文档/手册：\nhttps://cran.r-project.org/web/packages/tidyverse/tidyverse.pdf\nTo use packages you must first install them. You can do this by clicking on packages on the bottom right window, selecting install and searching for the package and installing it. Or if know know the name of the package, you can hard wire the installing using the function install.packages():\n要使用软件包，您必须先安装它们。您可以通过点击右下角窗口的“packages”按钮，选择“install”，然后搜索并安装软件包来完成此操作。或者，如果您知道软件包的名称，也可以使用函数“install.packages()”来强制安装：\n\n#Install packages function\n# install.packages(\"tidyverse\", dependencies = TRUE) # Note the use of quotes\n# NOTE: to allow this to render I have made the function call a comment. To make it run copy the code and delete the '#' from before the 'install.packages' command.\n# 注意：为了方便渲染，我已将函数调用添加注释。要使其运行，请复制代码并删除“install.packages”命令前的“#”。\n\nThe ‘dependencies=TRUE’ argument ensures that any dependent package is also installed with your target paackage. Remember the packages are tools in a toolbox; to use them after you have installed them you need to take them tool out of the box. The function that does this is called library().\n‘dependencies=TRUE’ 参数确保所有依赖包都会与目标包一起安装。请记住，这些包就像工具箱中的工具；安装后要使用它们，您需要将它们从工具箱中取出。执行此操作的函数称为 library()。\n\n#Load the library\nlibrary(tidyverse) # this loads multiple packages/libraries\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nR will generally manages the conflicts between packages that have functions with the same names but you can tell R use a function from a particular package using the package name, then two colons, and finally the function name. For example:\ndplyr::filter().\nWhere, dplyr is the package, :: links the package to the function filter().\nR 通常会处理包含同名函数的包之间的冲突，但您可以使用包名称、两个冒号以及函数名称来指示 R 使用特定包中的函数。例如：\ndplyr::filter()。\n其中，dplyr 是包，:: 将包链接到函数 filter()。\n\n\n2.1.2 Your first code / script file\nWe are going to create a new code file so you can progress through the workshop. The code commands are listed in the html file outlining the workshop activities and highlighted in square boxes. To make a new file click on the green cross at the top left of the window -&gt; select ‘Script file’ from the dropdown list. A new file called untitled will be added to the tabs. Simply copy the text from the boxes and drop it into the scripting window. Use this area as your workspace rather than typing directly into the console window (bottom left). Change the text below to fit your filename and add today’s date.\n我们将创建一个新的代码文件，以便您完成研讨会。代码命令列在概述研讨会活动的 HTML 文件中，并以方框突出显示。要创建新文件，请点击窗口左上角的绿色十字 -&gt; 从下拉列表中选择“脚本文件”。一个名为无标题的新文件将添加到选项卡中。只需从方框中复制文本并将其拖放到脚本窗口中即可。将此区域用作您的工作区，而不是直接在控制台窗口（左下角）中输入。请将下面的文本更改为适合您的文件名，并添加今天的日期。\n\n# Filename: add in your filename. I suggest something that includes 'week_1'\n# Date: Add a date so you can track changes\n\nThe # symbol tells R that is is a comment so it is not run as a line of code. We use comments to aid script interpretation for users and to remind ourselves why our former self coded what we did. It is amazing what we forget when moving on from a piece of coding.\nTo run a line of code hold control Ctrl and enter on your keyboard (command and enter on a mac). You can also highlight blocks of code and do the same. You can also select the line (or block of code) you wish to run and click ‘Run’ at the top of the scripting window.\nNOTE: The code is sequential so start at the top and work down. If you miss bits of code it will error and you will get confused and likely frustrated.\n# 符号告诉 R，这是一个注释，因此它不会作为一行代码运行。我们使用注释来帮助用户解释脚本，并作为我们的备忘录。令人惊讶的是，当我们从一段代码中继续前进时，我们竟然会忘记很多东西。\n要运行一行代码，请按住键盘上的 control Ctrl 和 Enter 键（在 Mac 上，请按住 **command 和 Enter 键）。您也可以高亮显示代码块并执行相同操作。您也可以选择要运行的行（或代码块），然后点击脚本窗口顶部的“运行”。\n注意：代码是连续的，因此请从顶部开始向下运行。如果您错过任何代码片段，就会出错，您会感到困惑，甚至可能感到沮丧。\n\n\n2.1.3 Coding Basics\nR has a steep learning curve, but the benefits of using it are well worth the effort. Take your time and think what the code is doing as you use it. As Wickham et al. (2023) note “Frustration is natural when you start programming in R because it is such a stickler for punctuation, and even one character out of place can cause it to complain. But while you should expect to be a little frustrated, take comfort in that this experience is typical and temporary: it happens to everyone, and the only way to get over it is to keep trying”.\nR 语言的学习曲线陡峭，但使用它所带来的好处绝对值得你付出努力。在使用过程中，请慢慢思考代码的功能。正如 Wickham 等人 (2023) 指出的那样：“刚开始使用 R 编程时，感到沮丧是很自然的，因为它对标点符号非常严格，即使一个字符出错也会导致它报错。虽然你可能会感到有些沮丧，但请放心，这种经历很常见，而且是暂时的：每个人都会遇到这种情况，克服它的唯一方法就是继续尝试”。\nThe best way to learn R is to take the basic code provided in the workshops and experiment with changing parameters - such as point type in a graph, line thickness or point colour - You cannot break it! Everything is fixable. Make lots of notes as you go along and if you are getting really frustrated take a break! In many ways this is like learning a language; a little practice more frequently is a good strategy.\nR operates by taking instructions, running functions and adding the outcomes of those functions into objects. The objects are generated by using the assignment operator ‘&lt;-’.\nThis ‘pipes’ the outcome of a piece of code into an object.\nFor example, try the following (copy the text from the box below and paste it into your code file, below the filename and data comment lines):\n学习 R 的最佳方法是学习研讨会上提供的基础代码，并尝试改变参数——例如图表中的点类型、线条粗细或点颜色——你无法破坏它！一切都是可以修复的。边学边做笔记，如果感到很沮丧，就休息一下！这在很多方面就像学习一门语言；多练习一些是个好策略。\nR 的运行方式是接收指令、运行函数，并将这些函数的结果添加到对象中。这些对象是使用赋值运算符生成的 ‘&lt;-’.\n这会将一段代码的结果“通过管道”传输到一个对象中。\n例如，尝试以下操作（从下面的框中复制文本并将其粘贴到代码文件中，位于文件名和数据注释行下方）：\n\nTutorname &lt;- \"Jon\" # note the quotes. These tell R it is a string.\n\nWhen you run the code it takes the string Jon and adds it to an object called Tutorname. This object is then stored in the Environment window (top right) (Fig. 2).\n运行代码时，它会获取字符串 Jon 并将其添加到名为 Tutorname 的对象中。该对象随后存储在 Environment 窗口（右上角）中（图 3）。\n\n\n\n\n\n\n\n\nFigure 2.2: The environment window function\n\n\n\n\n\nIf you just type “Jon” and run that code, it will repeat the name in console window (bottom left window).\n如果您只是输入“Jon”并运行该代码，它将在控制台窗口（左下角窗口）中重复该名称。\n\n\"Jon\"  \n\n[1] \"Jon\"\n\n\nAll R statements where you create objects, assignment statements, have the same form:\nobject_name &lt;- value When reading that code, say “object name gets value” in your head. You will make lots of assignments, and typing &lt;- repetitively is a pain to type. You can save time with RStudio’s keyboard shortcut: Press Alt and the - (the minus sign) in sequence. This is Option plus - (the minus sign) on a Mac.\nLet’s explore some more… R will do lots of things. It will act like a huge calculator running mathematical calculations:\n所有用于创建对象的 R 语句（赋值语句）都具有相同的形式：\nobject_name &lt;- value 阅读该代码时，请在脑海中默念“对象名称获取值”。您将进行大量赋值，而重复输入 &lt;- 会非常麻烦。您可以使用 RStudio 的键盘快捷键来节省时间：依次按下 Alt 和 -（减号）。在 Mac 上，这相当于 Option 加 -（减号）。\n让我们进一步探索…… R 可以做很多事情。它就像一个巨大的计算器，运行着数学计算：\n\n1/1000*25 # see the response in the console window (bottom left)\n\n[1] 0.025\n\n\nor\n\ntan(pi*100) # or\n\n[1] 1.964387e-15\n\n10+20+30 # or \n\n[1] 60\n\n\nAs we have seen above you can add the outcomes of these calculations to an object. Keep and eye on the Environment window as you run the code. This is useful if you want to use the outcome many times.\n正如我们上面所见，您可以将这些计算的结果添加到对象中。运行代码时，请密切关注环境窗口。如果您想多次使用该结果，这将非常有用。\n\nx &lt;- 8 * 9\n\nNotice it doesn’t show the content of the object in the console window but it does store as an object in the computer memory or R’s Environment (see top right window).\nIf you want to know whats in the object then type the object name and run the line of code.\n请注意，它不会在控制台窗口中显示对象的内容，但它会作为对象存储在计算机内存或 R 的环境中（参见右上角的窗口）。\n如果您想知道对象中的内容，请输入对象名称并运行该代码行。\n\nx\n\n[1] 72\n\n\nAnd it gives you the answer in the console (bottom left window).\nYou can combine multiple elements into a vector with the c() function (literally means ‘concatenate’ or ‘add together’):\n它会在控制台（左下角窗口）中显示答案。\n您可以使用 c() 函数（字面意思是“连接”或“相加”）将多个元素组合成一个向量：\n\nprimes &lt;- c(2, 3, 5, 7, 11, 13) # adds primes from zero to 13 into a vector\n\nAnd basic arithmetic on vectors is applied to every element of of the vector. So here each prime in the sequence is multiplied by 2 and the and returned to the same object.\n向量的基本运算应用于向量的每个元素。因此，这里将序列中的每个素数乘以 2，然后返回同一个对象。\n\nprimes * 2\n\n[1]  4  6 10 14 22 26\n\n\nNOTE R overwrites the previous object with no warnings as that is what you told it to do!: If want to retain the first object then give the new one a different name!\n注意 R 会毫无警告地覆盖前一个对象，因为这是你告诉它要做的！：如果要保留第一个对象，那么给新对象起一个不同的名称！\n\n\n2.1.4 Getting Data into R via the Console\nMost of the following derives from Beginner’s Guide to R (Zuur, Elena N. Ieno, and Meesters 2009). First Steps - typing in a small dataset.\n以下内容大部分来自 Zuur 等人的《2009 R 初学者指南》。第一步 - 输入一个小的数据集。\n\na &lt;- 59\nb &lt;- 55\nc &lt;- 55.5\nd &lt;- 55\n\nSee what happens if you type the object names: 看看输入对象名称会发生什么：\n\nd\n\n[1] 55\n\na\n\n[1] 59\n\n\nNow use some basic maths operators to play around with them. Try a * b etc\nTo see what you’ve done type any of the letters. You could have called these variables anything but it is wise to use names that are memorable and relate to what the variable represents. Let’s assume you have been measuring bird wing length (in mm). So:\n现在使用一些基本的数学运算符来操作它们。试试 a * b 等等。\n要查看你输入的内容，请输入任意字母。你可以给这些变量起任何名字，但最好使用容易记住且与变量含义相关的名称。假设你一直在测量鸟翼的长度（以毫米为单位）。所以：\n\nWing1 &lt;- 59 # Note naming conventions in R. It's case sensitive, no spaces, forward slashes \nWing2 &lt;- 55 # hyphens; the names cannot start with a numeric either! \nWing3 &lt;- 55.5 # It will accept dots (periods), underscores etc \nWing4 &lt;- 55 # Capitalising variable names is good practice as there maybe functions with similar names! \nWing5 &lt;- 52.5\n\nBase R is powerful and has numerous functions allocated to it. Let’s try a few basic ones with these data.\nR 基础功能强大，并配备了众多函数。让我们用这些数据尝试一些基本函数。\n\nsqrt(Wing1) # Square root of variable \n\n[1] 7.681146\n\nWing1 * Wing3 \n\n[1] 3274.5\n\nWing1 + Wing2 + Wing3 \n\n[1] 169.5\n\nWing1 * Wing5 / 5\n\n[1] 619.5\n\n\nAlthough R is performing these calculations and returning the answer via the console, it is not storing them. The console output is visible in the html file (the document you are reading) below the code snippet. I used a quarto file to create the html output but I want you all to work with base R codefiles for the time being. To store these you need to define new variables (or objects).\n虽然 R 会执行这些计算并通过控制台返回结果，但它不会存储它们。控制台输出可以在代码片段下方的 HTML 文件（您正在阅读的文档）中查看。我使用 Quarto 文件创建了 HTML 输出，但我希望大家暂时使用基础 R 代码文件。要存储这些输出，您需要定义新的变量（或对象）。\n\nSQ.Wing1 &lt;- sqrt(Wing1) # Calculation product is now stored as another variable SQ.Wing1\n\nThis doesn’t display the outcome in the console window. It has added as a variable to your environment (see top right panel of your screen). To see it you need to type the new object name.\n这不会在控制台窗口中显示结果。它已作为变量添加到您的环境中（请参阅屏幕右上角的面板）。要查看它，您需要输入新的对象名称。\n\nSQ.Wing1\n\n[1] 7.681146\n\n\nWe can hold objects in any form. You used the concatenate c() function above to calculate a run of prime numbers from a vector. We can create a vector of our wing lengths.\n我们可以保存任何形式的对象。你之前使用了 concatenate c() 函数从一个向量计算出一连串素数。我们可以创建一个包含机翼长度的向量。\n\nWingcrd &lt;- c(59, 55, 53.5, 55, 52.5, 57.5, 53, 55) \n\nNote spaces improve readibilty and you need () brackets not [ ] or {}; these are reserved for other things. You can create vectors with strings using quotes. This typically how factor variables might be stored in a dataframe:\n注意：空格可以提高可读性，并且需要使用 () 括号，而不是 [ ] 或 {}；这些是保留用于其他用途的。您可以使用引号创建包含字符串的向量。因子变量通常存储在数据框中，如下所示：\n\nmy_string &lt;- c(\"str1\", \"str2\") # It needs quotation marks\nmy_string # returns the vector\n\n[1] \"str1\" \"str2\"\n\n\nOnce you have data in a vector you can find individual values and ranges of values by using the ‘[]’ square brackets. Very useful for subsetting data for analyses! We’ll return to this many times, so do not worry if it isn’t making sense right now.\n将数据放入向量后，您可以使用“[]”方括号查找单个值及其值域。这对于分析子集数据非常有用！我们以后会多次讨论这一点，所以如果现在看不懂也不用担心。\n\nWingcrd[1] # Finds the first value \n\n[1] 59\n\nWingcrd[1 : 5] # Returns values 1-5 \n\n[1] 59.0 55.0 53.5 55.0 52.5\n\nWingcrd[-2] # Returns all values excluding value 2\n\n[1] 59.0 53.5 55.0 52.5 57.5 53.0 55.0\n\n\nNotice the formatting here.\nNow we have multiple variables we can use base R functions to provide statistical descriptors of them (sum, mean, max, min, median, var, sd and so on).\n注意这里的格式。\n现在我们有多个变量，我们可以使用基础 R 函数来提供它们的统计描述符（总和、平均值、最大值、最小值、中位数、方差、标准差等等）。\n\nsum.wings &lt;- sum(Wingcrd)# We have allocated the sum of the values to the variable sum.wings\nsum.wings\n\n[1] 440.5\n\n\nEXERCISE: Spend a few minutes to try a few more out:sum, mean, max, min, median, var, sd (5 minutes or so).\nNow let’s add the other variables in same way to create the other variables a table. These are other measurements from birds, specifically, their foot length (tarsus), head length including their bill (head) and their weight (wt).\n练习：花几分钟时间尝试更多变量：总和、平均值、最大值、最小值、中位数、方差、标准差（大约 5 分钟）。\n现在，让我们以相同的方式添加其他变量，创建一个表格。这些是鸟类的其他测量数据，具体来说，包括它们的足长（跗骨）、包括喙在内的头长（头部）以及体重（wt）。\n\nTarsus &lt;- c(22.3, 19.7, 20.8, 20.3, 20.8, 21.5, 20.6, 21.5) \nHead &lt;- c(31.2, 30.4, 30.6, 30.3, 30.3, 30.8, 32.5, NA) # see the NA\nWt &lt;- c(9.5, 13.8, 14.8, 15.2, 15.5, 15.6, 15.6, 15.7)\n\nNote one variable has a missing value; these must be listed with an NA; empty cells are a problem! Take heed though! Missing values cause issues for some functions:\n注意，一个变量有缺失值；这些变量必须用NA列出；空单元格会有问题！不过要注意！缺失值会导致某些函数出现问题：\n\nsum(Head) # Told you!\n\n[1] NA\n\n\nThe system errored because it was not expecting a missing value or NA. To get around that you need to instruct the function that NAs exist.\n系统出错了，因为它没有预料到缺失值或 NA。为了解决这个问题，你需要指示函数存在 NA。\n\nsum(Head, na.rm = TRUE) # Note check help files for functions. Some use 'na.action'\n\n[1] 216.1\n\n\nLet’s pose a question. Can you combine these variables Wingcrd, Tarsus, Head, Wt into one file? Maybe c() will help….?\n让我们提出一个问题。你能把 Wingcrd、Tarsus、Head 和 Wt 这些变量合并到一个文件中吗？也许 c() 能帮上忙……？\n\nBirdData &lt;- c(Wingcrd, Tarsus, Head, Wt)  \n\nLet’s have a look:\n让我们来看看：\n\nBirdData\n\n [1] 59.0 55.0 53.5 55.0 52.5 57.5 53.0 55.0 22.3 19.7 20.8 20.3 20.8 21.5 20.6\n[16] 21.5 31.2 30.4 30.6 30.3 30.3 30.8 32.5   NA  9.5 13.8 14.8 15.2 15.5 15.6\n[31] 15.6 15.7\n\n\nHmmm big mess!!!! BirdData is a single vector of length 32 (4 x 8). It is organised this way because it cannot distinguish the 8 values in each variables. To sort this out we need to create another variable with 32 values to use an index. We could do this the hard way and use the repeat and sequencing tools to sort it then align it but I am a fan of easier fixes.\nWe can combine it directly in a table, by binding these values into a data file of sorts using the cbind() or column bind function.\n嗯，乱糟糟的！BirdData 是一个长度为 32（4 x 8）的向量。它之所以这样组织，是因为它无法区分每个变量中的 8 个值。为了解决这个问题，我们需要创建另一个包含 32 个值的变量来使用索引。我们也可以采用更复杂的方法，使用 repeat 和 sequence 工具对其进行排序，然后再进行对齐，但我更喜欢更简单的方法。\n我们可以直接在表中合并它们，方法是使用 cbind() 或列绑定函数将这些值绑定到一个数据文件中。\n\nBirdData2 &lt;- cbind(Wingcrd, Tarsus, Head, Wt) \nBirdData2 # See product of your labour. A data file!\n\n     Wingcrd Tarsus Head   Wt\n[1,]    59.0   22.3 31.2  9.5\n[2,]    55.0   19.7 30.4 13.8\n[3,]    53.5   20.8 30.6 14.8\n[4,]    55.0   20.3 30.3 15.2\n[5,]    52.5   20.8 30.3 15.5\n[6,]    57.5   21.5 30.8 15.6\n[7,]    53.0   20.6 32.5 15.6\n[8,]    55.0   21.5   NA 15.7\n\n\nIf you click on the “BirdData2” object in the Environment tab above right window it will open as a tab in this window. Looks familiar doesn’t it?!\nNotice this is one of the few occasions where the function call has an uppercase letter it is ‘View’ not ‘view’. This is because it was uniquely created for RStudio. This highly unusual all R functions start with lowercase letters (e.g. mean, sd).\nNo suppose you want to access elements of BirdData2 to check on data accuracy. We can find elements as we did above by using the square brackets. Pay attention to the format of the subset search here [row,column]. You need to tell R to look in the right place. The rows are always the first element in the bracket followed by a comma and the column. R is expecting a number in this bracket and the numbers are effectively coordinates. So [1,1] will return the value that is located in the first row and first column of the table.\n如果您在右侧窗口上方的“环境”选项卡中点击“BirdData2”对象，它将在此窗口中以选项卡的形式打开。看起来很熟悉，是吧？！\n请注意，这是函数调用中少数几个包含大写字母的情况之一，它是“View”而不是“view”。这是因为它是专门为 RStudio 创建的。所有 R 函数都以小写字母开头（例如 mean、sd），这种情况非常罕见。\n假设您想访问 BirdData2 的元素来检查数据准确性。我们可以像上面一样使用方括号查找元素。请注意此处子集搜索的格式为 [row,column]。您需要告诉 R 在正确的位置查找。行始终是括号中的第一个元素，后跟逗号和列。R 期望括号中是一个数字，而这些数字实际上是坐标。因此 [1,1] 将返回位于表格第一行第一列的值。\n\nBirdData2[,1] # lists ALL the data from the first column. There is no value for the row, and\n\n[1] 59.0 55.0 53.5 55.0 52.5 57.5 53.0 55.0\n\nBirdData2[1,] # lists ALL the data from the first row.\n\nWingcrd  Tarsus    Head      Wt \n   59.0    22.3    31.2     9.5 \n\nBirdData2[1,1] # Reports the item in the first row and column \n\nWingcrd \n     59 \n\nBirdData2[,2 : 4] # Reports the data in columns 2-4 or \"Tarsus\", \"Head\" and \"Wt\" \n\n     Tarsus Head   Wt\n[1,]   22.3 31.2  9.5\n[2,]   19.7 30.4 13.8\n[3,]   20.8 30.6 14.8\n[4,]   20.3 30.3 15.2\n[5,]   20.8 30.3 15.5\n[6,]   21.5 30.8 15.6\n[7,]   20.6 32.5 15.6\n[8,]   21.5   NA 15.7\n\nBirdData2[,-1] # Returns all columns minus column one \"Wingcrd\n\n     Tarsus Head   Wt\n[1,]   22.3 31.2  9.5\n[2,]   19.7 30.4 13.8\n[3,]   20.8 30.6 14.8\n[4,]   20.3 30.3 15.2\n[5,]   20.8 30.3 15.5\n[6,]   21.5 30.8 15.6\n[7,]   20.6 32.5 15.6\n[8,]   21.5   NA 15.7\n\nBirdData2[, c(1, 2, 4)] # Returns all the data from columns 1, 2 and 4 (i.e. non sequential)\n\n     Wingcrd Tarsus   Wt\n[1,]    59.0   22.3  9.5\n[2,]    55.0   19.7 13.8\n[3,]    53.5   20.8 14.8\n[4,]    55.0   20.3 15.2\n[5,]    52.5   20.8 15.5\n[6,]    57.5   21.5 15.6\n[7,]    53.0   20.6 15.6\n[8,]    55.0   21.5 15.7\n\n\nThat’s a lot of work for a simple data file we could (and will later) load in from a text file or excel. Why do it? Because you’ve learned some very important functions ‘c’, and ‘cbind’ are three of my favourites (but check ‘rbind’). What we did was create a simple table of data that looked like a spreadsheet. But it is actually an array or matrix, lacking the column headers you typically find in a spreadsheet.\n对于一个简单的数据文件来说，这可是个大工程，我们可以（以后也会）从文本文件或 Excel 中加载它。为什么要这么做？因为你已经学习了一些非常重要的函数，其中“c”和“cbind”是我最喜欢的三个函数（不过，也请检查一下“rbind”）。我们所做的就是创建一个简单的数据表，看起来像电子表格。但它实际上是一个数组或矩阵，缺少电子表格中常见的列标题。\n\nclass(BirdData2)\n\n[1] \"matrix\" \"array\" \n\n\nTo use it you need to use column and row numbers. Climate scientists frequently use arrays for their larger dataset because the require less space and can be more readily used for mathematical calculations, but sometimes is easier for our data to be stored in an spreadsheet object known as a dataframe.\n要使用它，您需要使用列号和行号。气候科学家经常使用数组来存储较大的数据集，因为数组占用的空间更少，而且更容易用于数学计算。但有时，将数据存储在称为数据框的电子表格对象中会更方便。\n\n\n2.1.5 Creating and using dataframes\nThey have special properties and are the general means of housing data in R (after import). So we can recreate the data file above using the data.frame function (we’ll shorten the names as well).\n它们具有特殊属性，是 R 中（导入后）存储数据的通用方法。因此，我们可以使用 data.frame 函数重新创建上面的数据文件（我们也会缩短其名称）。\n\nBirdData3 &lt;- data.frame(WC = Wingcrd, TS = Tarsus,\n  HD = Head, W = Wt) \nBirdData3\n\n    WC   TS   HD    W\n1 59.0 22.3 31.2  9.5\n2 55.0 19.7 30.4 13.8\n3 53.5 20.8 30.6 14.8\n4 55.0 20.3 30.3 15.2\n5 52.5 20.8 30.3 15.5\n6 57.5 21.5 30.8 15.6\n7 53.0 20.6 32.5 15.6\n8 55.0 21.5   NA 15.7\n\n\nLook the environment tab again it’s added a blue arrow symbol and it tells you how many observations (=rows) and variables (=columns) you have in the dataframe. Now click on the blue arrow. This shows your column data and the column name. Click on the name and it will open the file up in View.\nSome key things you need to know about dataframes.\n\nThey hold data of different types unlike matrices and vectors more easily;\nNo real limit on size (for most purposes) but bigger does = slower;\nThey allow you to draw out data with all the available filters and searches (see above);\nYou can use the dollar sign operator assigns column to the data frame.\n\n再次查看“环境”选项卡，它添加了一个蓝色箭头符号，它指示数据框中有多少个观察值（=行）和变量（=列）。现在点击蓝色箭头。这将显示您的列数据和列名称。点击列名称，它将在视图中打开文件。\n关于数据框，您需要了解一些关键事项。\n\n与矩阵和向量不同，它们更容易保存不同类型的数据；\n对大小没有实际限制（在大多数情况下），但数据框越大，速度越慢；\n它们允许您使用所有可用的过滤器和搜索功能（参见上文）提取数据；\n您可以使用美元符号运算符将列分配给数据框。\n\n\nBirdData3\n\n    WC   TS   HD    W\n1 59.0 22.3 31.2  9.5\n2 55.0 19.7 30.4 13.8\n3 53.5 20.8 30.6 14.8\n4 55.0 20.3 30.3 15.2\n5 52.5 20.8 30.3 15.5\n6 57.5 21.5 30.8 15.6\n7 53.0 20.6 32.5 15.6\n8 55.0 21.5   NA 15.7\n\n\nReturns the full dataframe in its entirety, whereas:\n返回完整的数据框，而：\n\nBirdData3$WC \n\n[1] 59.0 55.0 53.5 55.0 52.5 57.5 53.0 55.0\n\n\nReturns just that one column. 仅返回该列。\nOnce you have your data in a dataframe, you can also add in additional columns and also rename either the column headings and the row headings using the colnames() and rownames() functions. Have a look at this using the ?? help from the console window / pane (if you are in RStudio) 将数据放入数据框后，您还可以添加其他列，并使用 colnames() 和 rownames(). 函数重命名列标题和行标题。如果您使用的是 RStudio，请使用控制台窗口/窗格中的 ?? 帮助查看此信息。\n\n\n2.1.6 A few more key functions\nThese will be useful as you progress:\nread.table() imports data from a tab separated text file (see below) names() lists the column names in the datafile str() shows the data structure of the datafile. dim() gives the fuile dimensions (rows v columns) head() displays the first six rows tail() displays the last six rows View() displays 1000 rows of the datafile (like a spreadsheet) as you recall from above.\nread.table() 从制表符分隔的文本文件导入数据（见下文） names() 列出数据文件中的列名 str() 显示数据文件的数据结构。 dim() 给出完整的维度（行 v 列） head() 显示前六行 tail() 显示后六行 View() 显示数据文件的 1000 行（像电子表格一样），正如您从上面回忆的那样。\n\n\n2.1.7 Loading in data from a file\nWe’ll start by importing the deer.txt using read.table. Remember unless you have set your data subdirectory as your working directory you need to show R where the data is located. My standard practice is to open my codefiles from the directory by double-clinking on it. This will open RStudio and then working directory will the the code file directory. I then ‘hardwire’ the read calls using a path in the function:\n我们首先使用 read.table 导入 deer.txt 文件。记住，除非你已将数据子目录设置为工作目录，否则你需要向 R 展示数据所在的位置。我的标准做法是双击该目录打开我的代码文件。这将打开 RStudio，然后工作目录将指向代码文件目录。然后，我使用函数中的路径“硬连接” read 调用：\n\nDeer &lt;- read.table(\"~/Documents/GitHub/Teaching/LM_25556Environmental_Analysis/Data/Deer.txt\",header=TRUE)\n\nThis is easier than you’d imagine. Look at the bottom right window. This shows files, plots, etc. Click on ‘Files’. This will show you where R is currently ‘looking’. You can click on the subdirectories listed in the directory structure till you land on the ‘data’ subdirectory. Then simply click on the blue cog and select copy ‘folder path to clipboard’ (Fig. 3). Then paste this into your read function call (see above). I use a mac, so your windows path will look different.\n这比你想象的要简单。查看右下角的窗口。这里显示了文件、图表等。点击“文件”。这将显示 R 当前正在“查看”的位置。你可以点击目录结构中列出的子目录，直到找到“数据”子目录。然后点击蓝色齿轮，选择“将文件夹路径复制到剪贴板”（图 3）。然后将其粘贴到你的 read 函数调用中（见上文）。我用的是 Mac，所以你的 Windows 路径看起来会有所不同。\n\n\n\n\n\n\n\n\nFigure 2.3: Copying the path information\n\n\n\n\n\nNow we have the data loaded let’s explore some of those commands we mentioned above.\n现在我们已经加载了数据，让我们来探索一下上面提到的一些命令。\n\ndim(Deer)\n\n[1] 1182    9\n\n\nWe have 1182 row and 9 columns in our data.\n我们的数据有 1182 行和 9 列。\n\nhead(Deer) \n\n  Farm Month Year Sex clas1_4 LCT   KFI Ecervi Tb\n1   AL    10    0   1       4 191 20.45   0.00  0\n2   AL    10    0   1       4 180 16.40   0.00  0\n3   AL    10    0   1       3 192 15.90   2.38  0\n4   AL    10    0   1       4 196 17.30   0.00  0\n5   AL    10    0   1       4 204    NA   0.00 NA\n6   AL    10    0   1       4 190 16.30   0.00  0\n\n\nShows our first 6 rows. Have a guess what ‘tail’ shows! If we want to understand the type of data we have in the file we can use base R’s str() function or tidyverse’s glimpse(). I prefer the latter but it’s your decision.\n显示前 6 行。猜猜“tail”显示的是什么！如果我们想了解文件中的数据类型，可以使用基础 R 的 str() 函数或 tidyverse 的 glimpse()。我更喜欢后者，但最终决定权在你。\n\nstr(Deer)\n\n'data.frame':   1182 obs. of  9 variables:\n $ Farm   : chr  \"AL\" \"AL\" \"AL\" \"AL\" ...\n $ Month  : int  10 10 10 10 10 10 10 10 10 10 ...\n $ Year   : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Sex    : int  1 1 1 1 1 1 1 1 1 1 ...\n $ clas1_4: int  4 4 3 4 4 4 4 4 4 4 ...\n $ LCT    : num  191 180 192 196 204 190 196 200 197 208 ...\n $ KFI    : num  20.4 16.4 15.9 17.3 NA ...\n $ Ecervi : num  0 0 2.38 0 0 0 1.21 0 0.8 0 ...\n $ Tb     : int  0 0 0 0 NA 0 NA 1 0 0 ...\n\n\n\nglimpse(Deer)\n\nRows: 1,182\nColumns: 9\n$ Farm    &lt;chr&gt; \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"A…\n$ Month   &lt;int&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12…\n$ Year    &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 99, 99, 99, 99, 9…\n$ Sex     &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1,…\n$ clas1_4 &lt;int&gt; 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 3, 3, 4,…\n$ LCT     &lt;dbl&gt; 191, 180, 192, 196, 204, 190, 196, 200, 197, 208, 216, 199, 17…\n$ KFI     &lt;dbl&gt; 20.45, 16.40, 15.90, 17.30, NA, 16.30, 22.20, 14.70, 13.50, 15…\n$ Ecervi  &lt;dbl&gt; 0.0000, 0.0000, 2.3800, 0.0000, 0.0000, 0.0000, 1.2100, 0.0000…\n$ Tb      &lt;int&gt; 0, 0, 0, 0, NA, 0, NA, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, NA, NA…\n\n\nIf we want to how many observations we have per farm, then we can use the table() function. This is brilliant for looking at balance of say an ANOVA (Analysis of Variance) design or even an interaction in a regression call.\n如果我们想知道每个农场有多少个观测值，可以使用 table() 函数。这对于查看方差分析 (ANOVA) 设计的平衡性，甚至回归分析中的交互作用都非常有效。\n\ntable(Deer$Farm)\n\n\n   AL    AU    BA    BE    CB   CRC    HB   LCV    LN   MAN    MB    MO    NC \n   15    37    98    19    93    16    35     2    34    76    41   278    32 \n   NV    PA    PN    QM    RF    RO R\\xd1   SAL   SAU    SE    TI    TN  VISO \n   35    11    45    75    34    44    25     1     3    26    21    31    15 \n   VY \n   40 \n\n\nWe can see that a few farms have got very few observations (i.e. it’s unbalanced) - we’d need to be careful in how we analyse it.\n我们可以看到，一些农场的观测数据非常少（即不平衡），我们需要谨慎分析。\nIf we were interested in seeing whether gender interacts with year, then:\n如果我们想知道性别是否与年份有相互作用，那么：\n\ntable(Deer$Sex, Deer$Year) \n\n   \n      0   1   2   3   4   5  99\n  1 115  85 154  75  78  34  21\n  2  76  40 197 123  60  35   0\n\n\nRows: 1 = Males, 2 = Female Columns: 0 = 2000, 1 = 2001, 2 = 2002, 3 = 2003, 4 = 2004, 5 = 2005 and 99 = 1999\nIn 1999 no females were sampled, so you cannot use an interaction effect for Year:Sex in your models. This will make sense later in the course!\nNow let’s spend a few minutes using some of the new knowledge you have gained.\n行：1 = 男性，2 = 女性；列：0 = 2000，1 = 2001，2 = 2002，3 = 2003，4 = 2004，5 = 2005，99 = 1999\n1999 年没有女性样本，因此你不能在模型中使用“年份：性别”的交互作用效应。这在课程的后续部分会讲解！\n现在，让我们花几分钟时间运用你学到的一些新知识。",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>An introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "chap1.html#class-exercises",
    "href": "chap1.html#class-exercises",
    "title": "2  An introduction to R and RStudio",
    "section": "2.2 Class Exercises",
    "text": "2.2 Class Exercises\n\n2.2.1 Exercise 1 - using the c function to create vectors\n\n\n\nTable 1: Deer Measurement Data\n\n\nFarm\nMonth\nYear\nSex\nLengthClass\nLengthCT\nEcervi\nTb\n\n\n\n\nMO\n11\n00\n1\n1\n75.0\n0\n0\n\n\nMO\n7\n00\n2\n1\n85.0\n0\n0\n\n\nMO\n7\n01\n2\n1\n91.6\n0\n1\n\n\nMO\nNA\nNA\n2\n1\n95.0\nNA\nNA\n\n\nLN\n9\n03\n1\n1\nNA\n0\n0\n\n\nSE\n9\n03\n2\n1\n105.1\n0\n0\n\n\nQM\n11\n02\n2\n1\n106.0\n0\n0\n\n\n\n\n\nThese data are a small part of a data file we imported earlier ( = deer.txt for full data).\nTb is the occurrence of Tuberculosis in cattle on some farms; The variables Farm, Month, Year, Sex, LengthClass are self-explanatory Ecervi is the occurrence of a cattle parasite.\n\nUsing the c function, create a variable that contains the length variable that contains the lengths of seven animals;\nAlso create a variable that contains the Tb values;\nWhat’s the average length, sd of the length of the cattle on the farms?\n\nTb 表示某些农场牛的结核病发病率；变量 Farm、Month、Year、Sex 和 LengthClass 的含义不言自明；Ecervi 表示牛寄生虫的发病率。\n\n使用 c 函数创建一个变量，其中包含长度变量，该变量包含七头牛的长度；\n再创建一个变量，其中包含 Tb 值；\n农场牛的平均长度（标准差）是多少？\n\n\n\n2.2.2 Exercise 2:\nUsing BirdData2 find the following by using the [] brackets to subset data.\n\ndata found in the cell situated in the last row and last column.\nrows 3-4 in column called “Head”.\nAll the data from columns 2 and 3 (you need to use 2: 3 to link the columns).\nAll the weights and write them to a variable Y.\nAll the columns excluding the first and third “Wingcrd” and “Wt”; use the ‘c’ function to do this. Write them to object called ‘X’.\n\n使用 BirdData2，通过使用 [] 括号对数据进行子集处理，找到以下结果：\n\n在最后一行最后一列的单元格中找到的数据。\n“Head”列的第 3-4 行。\n第 2 列和第 3 列的所有数据（需要使用 2:3 连接各列）。\n计算所有权重并将其写入变量 Y。\n除第一列和第三列“Wingcrd”和“Wt”之外的所有列；使用“c”函数执行此操作。将它们写入名为“X”的对象。\n\n\n\n2.2.3 Exercise 3: Creating and using data frames\n\nUse the data on deer parasites and Tb (EXERCISE 1 above) to create a data frame\nSquare root transform the length variable\nAdd it to the data frame as a new variable\n\nHINT: To do this you need to use ‘c’ to create all the variables first!!!\n\n使用鹿寄生虫和结核分枝杆菌的数据（上述练习 1）创建一个数据框\n对长度变量进行平方根变换\n将其作为新变量添加到数据框中\n\n提示：要执行此操作，您需要先使用“c”创建所有变量！",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>An introduction to R and RStudio</span>"
    ]
  },
  {
    "objectID": "chap1.html#references",
    "href": "chap1.html#references",
    "title": "2  An introduction to R and RStudio",
    "section": "2.3 References",
    "text": "2.3 References\n\n\n\n\nZuur, Alain F., Elena N. Ieno, and Erik Meesters. 2009. A Beginner’s Guide to R (Use R!). New York: Springer.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>An introduction to R and RStudio</span>"
    ]
  }
]